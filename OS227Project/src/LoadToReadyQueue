import java.util.Queue;

public class LoadToReadyQueue extends Thread {
    private Queue<PCB> jobQueue;

    public LoadToReadyQueue(Queue<PCB> jobQueue) {
        this.jobQueue = jobQueue;
    }

    @Override
    public void run() {
        while (true) {
            synchronized (jobQueue) {
                if (!jobQueue.isEmpty()) {
                    PCB job = jobQueue.peek();
                    if (SystemCalls.loadJobToMemory(job, Main.readyQueue, Main.availableMemory)) {
                        jobQueue.poll(); // Remove job from jobQueue if successfully loaded
                    }
                } else {
                    System.out.println("JobQueue is empty. LoadToReadyQueue is stopping.");
                    return;
                }
            }

            try {
                Thread.sleep(100); // Simulate delay
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
                return;
            }
        }
    }
}
